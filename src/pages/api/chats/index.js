//GET /api/chats → List user's chat sessions (title + archived)
//POST /api/chats → Create new chat session (image + prompt + title)

import connectToDB from "@/hooks/mongodb";
import mongoose from "mongoose";
import { ObjectId } from "mongodb";

export default async function handler(req, res) {
  if (req.method == "POST") {
    try {
      await connectToDB();
      const db = mongoose.connection.useDb("curator_test");
      const { title, image_id, initial_prompt, user_id } = req.body;
      console.log(req.body);
      console.log(image_id, title, initial_prompt, user_id);
      if (!image_id || !title || !initial_prompt) {
        return res.status(400).json({ error: "Missing required fields" });
      }

      const now = new Date();
      const userMessage = {
        _id: new ObjectId(),
        sender: "user",
        text: initial_prompt,
        timestamp: now,
      };

      const botMessage = {
        _id: new ObjectId(),
        sender: "bot",
        text: "This is a placeholder response. In the future, this will be generated by GPT based on the uploaded image and prompt.",
        timestamp: new Date(now.getTime() + 1000),
      };

      const result = await db.collection("ChatSession").insertOne({
        user_id: user_id || null,
        image_id: new ObjectId(image_id),
        title,
        is_archived: false,
        started_at: now,
        ended_at: new Date(now.getTime() + 2000),
        messages: [userMessage, botMessage],
      });

      return res.status(200).json({ chat_id: result.insertedId });
    } catch (err) {
      console.error("Chat session creation error:", err);
      return res.status(500).json({ error: "Failed to create chat session." });
    }
  }
}
